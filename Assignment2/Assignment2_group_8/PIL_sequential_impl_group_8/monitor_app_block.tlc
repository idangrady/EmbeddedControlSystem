%% file : monitor_app_block.tlc
%% 
%% Description:
%%   Simulink Coder TLC Code Generation file for monitor_app_block
%% 
%% Simulink version      : 9.2 (R2018b) 24-May-2018
%% TLC file generated on : 29-Mar-2023 00:08:23

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'monitor_app_block';
     def.OutputFcnSpec = 'void monitor(uint8 u1[12496], single y1[1], uint8 y2[1], uint32 u2[1], single y3[1])';
     def.HeaderFiles = {'monitor_app.h', 'memory_access.h', 'config.h', 'mapping.h'};
     def.SourceFiles = {'monitor_app.c', 'memory_access.c'};
     def.IncPaths = {'../../CompSOC_ec_target/files'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
%/

%implements monitor_app_block "C"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup (block, system) void

    %% The Target Language must be C
    %if ::GenCPP==1 && !IsModelReferenceSimTarget()
        %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %<LibAddToCommonIncludes("monitor_app.h")>
    %<LibAddToCommonIncludes("memory_access.h")>
    %<LibAddToCommonIncludes("config.h")>
    %<LibAddToCommonIncludes("mapping.h")>
    %<SLibAddToStaticSources("monitor_app.c")>
    %<SLibAddToStaticSources("memory_access.c")>
%endfunction

%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup (block, system) void
    %<LibBlockSetIsExpressionCompliant(block)>
%endfunction

%% Function: Outputs ======================================================
%function Outputs (block, system) Output
    %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
    %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
    %assign y2_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
    %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
    %assign y3_ptr = LibBlockOutputSignalAddr(2, "", "", 0)
    %% 
    monitor((uint8_T*)%<u1_ptr>, %<y1_ptr>, %<y2_ptr>, (uint32_T*)%<u2_ptr>, %<y3_ptr>);
%endfunction

%% [EOF]
