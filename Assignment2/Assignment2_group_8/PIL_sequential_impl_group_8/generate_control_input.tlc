%% file : generate_control_input.tlc
%% 
%% Description:
%%   Simulink Coder TLC Code Generation file for generate_control_input
%% 
%% Simulink version      : 9.2 (R2018b) 24-May-2018
%% TLC file generated on : 29-Mar-2023 00:08:25

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'generate_control_input';
     def.OutputFcnSpec = 'void PID_controller()';
     def.HeaderFiles = {'control.h', 'memory_access.h', 'config.h', 'mapping.h'};
     def.SourceFiles = {'control.c', 'memory_access.c'};
     def.IncPaths = {'../../CompSOC_ec_target/files'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
%/

%implements generate_control_input "C"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup (block, system) void

    %% The Target Language must be C
    %if ::GenCPP==1 && !IsModelReferenceSimTarget()
        %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %<LibAddToCommonIncludes("control.h")>
    %<LibAddToCommonIncludes("memory_access.h")>
    %<LibAddToCommonIncludes("config.h")>
    %<LibAddToCommonIncludes("mapping.h")>
    %<SLibAddToStaticSources("control.c")>
    %<SLibAddToStaticSources("memory_access.c")>
%endfunction

%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup (block, system) void
    %<LibBlockSetIsExpressionCompliant(block)>
%endfunction

%% Function: Outputs ======================================================
%function Outputs (block, system) Output
    %% 
    PID_controller();
%endfunction

%% [EOF]
